<script>
window.lp = window.lp || {};
window.lp.enhanced = true;

window._trackJs = {
  token: "3cd28f4c5df14f6e9fffa815ed7712b0",
  application: "dotcom-pois"
};

  // Setup for analytics
window.lp.analytics = window.lp.analytics || {};
window.lp.analytics.modules = ["Tealium"];

window.lp.isAdblockActive = true;

(function(w){
  "use strict";
  /* exported loadCSS */
  var loadCSS = function( href, before, media ){
    // Arguments explained:
    // `href` [REQUIRED] is the URL for your CSS file.
    // `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before
      // By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.
    // `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'
    var doc = w.document;
    var ss = doc.createElement( "link" );
    var newMedia = media || "all";
    var ref;
    if( before ){
      ref = before;
    }
    else {
      var refs = ( doc.body || doc.getElementsByTagName( "head" )[ 0 ] ).childNodes;
      ref = refs[ refs.length - 1];
    }

    var sheets = doc.styleSheets;
    ss.rel = "stylesheet";
    ss.href = href;
    // temporarily set media to something inapplicable to ensure it'll fetch without blocking render
    ss.media = "only x";

    // wait until body is defined before injecting link. This ensures a non-blocking load in IE11.
    function ready( cb ){
      if( doc.body ){
        return cb();
      }
      setTimeout(function(){
        ready( cb );
      });
    }
    // Inject link
      // Note: the ternary preserves the existing behavior of "before" argument, but we could choose to change the argument to "after" in a later release and standardize on ref.nextSibling for all refs
      // Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/
    ready( function(){
      ref.parentNode.insertBefore( ss, ( before ? ref : ref.nextSibling ) );
    });
    // A method (exposed on return object for external use) that mimics onload by polling until document.styleSheets until it includes the new sheet.
    var onloadcssdefined = function( cb ){
      var resolvedHref = ss.href;
      var i = sheets.length;
      while( i-- ){
        if( sheets[ i ].href === resolvedHref ){
          return cb();
        }
      }
      setTimeout(function() {
        onloadcssdefined( cb );
      });
    };

    // once loaded, set link's media back to `all` so that the stylesheet applies once it loads
    if( ss.addEventListener ){
      ss.addEventListener( "load", function(){
        this.media = newMedia;
      });
    }
    ss.onloadcssdefined = onloadcssdefined;
    onloadcssdefined(function() {
      if( ss.media !== newMedia ){
        ss.media = newMedia;
      }
    });
    return ss;
  };
  // commonjs
  if( typeof exports !== "undefined" ){
    exports.loadCSS = loadCSS;
  }
  else {
    w.loadCSS = loadCSS;
  }
}( typeof global !== "undefined" ? global : this ));

function onloadCSS( ss, callback ) {
  var called;
  function newcb(){
      if( !called && callback ){
        called = true;
        callback.call( ss );
      }
  }
  if( ss.addEventListener ){
    ss.addEventListener( "load", newcb );
  }
  if( ss.attachEvent ){
    ss.attachEvent( "onload", newcb );
  }

  // This code is for browsers that donâ€™t support onload
  // No support for onload (it'll bind but never fire):
  //  * Android 4.3 (Samsung Galaxy S4, Browserstack)
  //  * Android 4.2 Browser (Samsung Galaxy SIII Mini GT-I8200L)
  //  * Android 2.3 (Pantech Burst P9070)

  // Weak inference targets Android < 4.4
  if( "isApplicationInstalled" in navigator && "onloadcssdefined" in ss ) {
    ss.onloadcssdefined( newcb );
  }
}

window.utag_data = {
  "cd6_SiteSection": "destinations",
  "cd9_TestExperience": "B:Destinations Next",
  "atlas_id": "359279",
  "content_group_2": "pois",
  "cd1_Continent": "Europe",
  "cd2_Country": "France",
  "cd3_City": "Paris",
  "cd5_Region": "Western Europe",
  "cd7_Topic": "Things to Do",
  "content_group_1": "destinations",
  "site_section": "destinations"
};
</script>
